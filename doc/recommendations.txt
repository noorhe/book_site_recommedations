для тех пользователей, для которых в новом куске логе были пул операциий, найти и посчитать пуш и пул операции во всем логе


хочу сделать пайплан, который будет загружать новые данные
    нужно проверить, сколько новых даталистов загрузились с последней проверки
        что нужно
            для начала выяснить списко законченных рид листов
            потом из файла user_id_book_rates взять и перегнать в csv в режиме добавления те строки, в которых
            сначала нужно добавить в файлы csv новые записи из user_id_book_rates и из log.json
            какие были
            какие новые
            данные со снапшота тех, которые были раньше
                посчитать, сколько у кого было закачанных
            добавить к закачанных данные из обновления
            тех, у кого закрылись все начатые, добавить в законченные
        как быть с группировкой?
        по сути, надо добавить к уже сузествовавшим группам новые
    кроме того, должны быть пост операции: нужно сохранить, до куда добрались
        до какой строки дошло в log.json
        подсчет начатых и законченных рид листов с прошлого раза

    что делать с результатами?
        их тоже надо добавлять в какой-то csv файл в конец

какие данные должны быть в ответе
    id первого юзера
    id второго юзера
    рейтинг соответствия по рейтингу
    рейтинг соответствия по набору
    произведение ретингов

Тут есть еще такое явление: многие пользователи просто добавляют книгу в список прочитанного без оценок. Что если в двух списках есть некое количество книжок, с оценкой 0, и книжек оцененных.
    Приходит в голову разделить списки на две части
        Для каждой пары списков
            Выделить два
                1: книжки с оценкой
                2: книжки без оценки
    *вопрос: что если книжка в оценкой есть в одном списке, а в другом она есть, но без оценки
    *вопрос: есть еще те книжки, которые есть в одном списке, но их нет в первом. считать ли их в списках книжек без оценки
    Итого, все книжки в двух списках можно разделить на несколько категорий
        Есть только в одном спике без оценки
        Есть только в одном списке с оценкой
        Есть в одном списке соценкой а в другом без оценки
        Есть в обоих списках с оценками
    Первое предположение
        Что если посчитать критерий присутствия, а потом разделить на него результат похожести по книжкам с оценкой в обоих списках?
    Тут нужен новый рид лист в изнальном виде: со всеми книгами, чтобы анализироть наличие/отсутвие
    В списке пересечений надо оставить только книги, которые есть в обоих списках с оценками



Вопрос, будут ли листы, в которых больше одинаковых книг добавлено скорее похожи по оценкам, или это будет означать, что пользователи скорее инетерсуются похожими темами и жанрами?

допустим, хотим сделать нахождение похожести на основе памяти
    есть формула, согласно которой можно вычислить рейтинг фильма для данного пользователя на основе похожести рейтингов по другим фильмам с оцененных этим пользователем и другими пользователями
    но как узнать какой фильм мы хотим таким образом оценить?
        а можно ли оценивать не конретный фильм, а получить прикидки того, наскольк отличается заданный список предпочтений от списка от других списков предпочтений
    что если применить простой подход: сначала найти косинусное расстояние, потом добьавить те фильмы, которые есть в наиболее близких, с т.з. косинусного расстояния списках, но нет в списке данного пользователя.
    надо попробовать
        для начала, возьмем 10 списков
        их надо еще достать из датасета
            загрузить 2 json-а
            вычислить похожесть
                сначала вычислить, по каким измерениям есть данные у обоих векторов
                вопрос: получается, что векторы с одинаковой оценкой только по одному изменернию и несовпадением по остальным измерениям будут намного сильнее похожи, чем векторы, в большим количество оббщих оценок, которые немного разняться? но это же глупость

коллаборативные рекомендательные системы
    (отсюда: https://neurohive.io/ru/osnovy-data-science/rekomendate0lnye-sistemy-modeli-i-ocenka/)
    матрица полезности
        в строках: пользователи
        в столбцах: товары
        в пересечениях: оценка товара пользователем (если есть) или ничего (если нет)
    нахождение похожести
        основанная на памяти:
            косинусная похожесть
            или
            корреляция Пирсона
        основанное на модели
            PCA
            SVD
            нейронные сети
            матричная факторизация

